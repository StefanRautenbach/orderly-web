/*
 * This file is generated by jOOQ.
*/
package org.vaccineimpact.orderlyweb.db.tables.records;


import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record2;
import org.jooq.Row2;
import org.jooq.impl.UpdatableRecordImpl;
import org.vaccineimpact.orderlyweb.db.tables.ReportVersionBatch;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.1"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ReportVersionBatchRecord extends UpdatableRecordImpl<ReportVersionBatchRecord> implements Record2<String, String> {

    private static final long serialVersionUID = 1693685132;

    /**
     * Setter for <code>report_version_batch.report_version</code>.
     */
    public void setReportVersion(String value) {
        set(0, value);
    }

    /**
     * Getter for <code>report_version_batch.report_version</code>.
     */
    public String getReportVersion() {
        return (String) get(0);
    }

    /**
     * Setter for <code>report_version_batch.report_batch</code>.
     */
    public void setReportBatch(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>report_version_batch.report_batch</code>.
     */
    public String getReportBatch() {
        return (String) get(1);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<String> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record2 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row2<String, String> fieldsRow() {
        return (Row2) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row2<String, String> valuesRow() {
        return (Row2) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field1() {
        return ReportVersionBatch.REPORT_VERSION_BATCH.REPORT_VERSION;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field2() {
        return ReportVersionBatch.REPORT_VERSION_BATCH.REPORT_BATCH;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value1() {
        return getReportVersion();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value2() {
        return getReportBatch();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ReportVersionBatchRecord value1(String value) {
        setReportVersion(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ReportVersionBatchRecord value2(String value) {
        setReportBatch(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ReportVersionBatchRecord values(String value1, String value2) {
        value1(value1);
        value2(value2);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached ReportVersionBatchRecord
     */
    public ReportVersionBatchRecord() {
        super(ReportVersionBatch.REPORT_VERSION_BATCH);
    }

    /**
     * Create a detached, initialised ReportVersionBatchRecord
     */
    public ReportVersionBatchRecord(String reportVersion, String reportBatch) {
        super(ReportVersionBatch.REPORT_VERSION_BATCH);

        set(0, reportVersion);
        set(1, reportBatch);
    }
}
