/*
 * This file is generated by jOOQ.
 */
package org.vaccineimpact.orderlyweb.db.tables;


import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row5;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;
import org.vaccineimpact.orderlyweb.db.DefaultSchema;
import org.vaccineimpact.orderlyweb.db.tables.records.OrderlywebUserGroupPermissionAllRecord;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class OrderlywebUserGroupPermissionAll extends TableImpl<OrderlywebUserGroupPermissionAllRecord> {

    private static final long serialVersionUID = 2019557566;

    /**
     * The reference instance of <code>orderlyweb_user_group_permission_all</code>
     */
    public static final OrderlywebUserGroupPermissionAll ORDERLYWEB_USER_GROUP_PERMISSION_ALL = new OrderlywebUserGroupPermissionAll();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<OrderlywebUserGroupPermissionAllRecord> getRecordType() {
        return OrderlywebUserGroupPermissionAllRecord.class;
    }

    /**
     * The column <code>orderlyweb_user_group_permission_all.id</code>.
     */
    public final TableField<OrderlywebUserGroupPermissionAllRecord, Integer> ID = createField(DSL.name("id"), org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>orderlyweb_user_group_permission_all.user_group</code>.
     */
    public final TableField<OrderlywebUserGroupPermissionAllRecord, String> USER_GROUP = createField(DSL.name("user_group"), org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>orderlyweb_user_group_permission_all.permission</code>.
     */
    public final TableField<OrderlywebUserGroupPermissionAllRecord, String> PERMISSION = createField(DSL.name("permission"), org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled. Deprecation can be turned off using {@literal <deprecationOnUnknownTypes/>} in your code generator configuration.
     */
    @java.lang.Deprecated
    public final TableField<OrderlywebUserGroupPermissionAllRecord, Object> SCOPE_PREFIX = createField(DSL.name("scope_prefix"), org.jooq.impl.DefaultDataType.getDefaultDataType("\"\""), this, "");

    /**
     * The column <code>orderlyweb_user_group_permission_all.scope_id</code>.
     */
    public final TableField<OrderlywebUserGroupPermissionAllRecord, String> SCOPE_ID = createField(DSL.name("scope_id"), org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * Create a <code>orderlyweb_user_group_permission_all</code> table reference
     */
    public OrderlywebUserGroupPermissionAll() {
        this(DSL.name("orderlyweb_user_group_permission_all"), null);
    }

    /**
     * Create an aliased <code>orderlyweb_user_group_permission_all</code> table reference
     */
    public OrderlywebUserGroupPermissionAll(String alias) {
        this(DSL.name(alias), ORDERLYWEB_USER_GROUP_PERMISSION_ALL);
    }

    /**
     * Create an aliased <code>orderlyweb_user_group_permission_all</code> table reference
     */
    public OrderlywebUserGroupPermissionAll(Name alias) {
        this(alias, ORDERLYWEB_USER_GROUP_PERMISSION_ALL);
    }

    private OrderlywebUserGroupPermissionAll(Name alias, Table<OrderlywebUserGroupPermissionAllRecord> aliased) {
        this(alias, aliased, null);
    }

    private OrderlywebUserGroupPermissionAll(Name alias, Table<OrderlywebUserGroupPermissionAllRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.view("CREATE VIEW \"orderlyweb_user_group_permission_all\"\nAS\nSELECT abstract.*, scoped.scope_prefix, scoped.scope_id\nFROM orderlyweb_user_group_permission as abstract\nINNER JOIN\n  (SELECT id, '*' AS scope_prefix, NULL AS scope_id\n    FROM orderlyweb_user_group_global_permission\n  UNION\n  SELECT id, 'report' AS scope_prefix, report AS scope_id\n  FROM orderlyweb_user_group_report_permission\n  UNION\n  SELECT id, 'version' AS scope_prefix, version AS scope_id\n  FROM orderlyweb_user_group_version_permission) AS scoped\non abstract.id = scoped.id"));
    }

    public <O extends Record> OrderlywebUserGroupPermissionAll(Table<O> child, ForeignKey<O, OrderlywebUserGroupPermissionAllRecord> key) {
        super(child, key, ORDERLYWEB_USER_GROUP_PERMISSION_ALL);
    }

    @Override
    public Schema getSchema() {
        return DefaultSchema.DEFAULT_SCHEMA;
    }

    @Override
    public OrderlywebUserGroupPermissionAll as(String alias) {
        return new OrderlywebUserGroupPermissionAll(DSL.name(alias), this);
    }

    @Override
    public OrderlywebUserGroupPermissionAll as(Name alias) {
        return new OrderlywebUserGroupPermissionAll(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public OrderlywebUserGroupPermissionAll rename(String name) {
        return new OrderlywebUserGroupPermissionAll(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public OrderlywebUserGroupPermissionAll rename(Name name) {
        return new OrderlywebUserGroupPermissionAll(name, null);
    }

    // -------------------------------------------------------------------------
    // Row5 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row5<Integer, String, String, Object, String> fieldsRow() {
        return (Row5) super.fieldsRow();
    }
}
