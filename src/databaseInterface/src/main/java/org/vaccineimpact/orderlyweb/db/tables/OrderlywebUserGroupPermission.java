/*
 * This file is generated by jOOQ.
 */
package org.vaccineimpact.orderlyweb.db.tables;


import java.util.Arrays;
import java.util.List;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row3;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;
import org.vaccineimpact.orderlyweb.db.DefaultSchema;
import org.vaccineimpact.orderlyweb.db.Keys;
import org.vaccineimpact.orderlyweb.db.tables.records.OrderlywebUserGroupPermissionRecord;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class OrderlywebUserGroupPermission extends TableImpl<OrderlywebUserGroupPermissionRecord> {

    private static final long serialVersionUID = -1939428461;

    /**
     * The reference instance of <code>orderlyweb_user_group_permission</code>
     */
    public static final OrderlywebUserGroupPermission ORDERLYWEB_USER_GROUP_PERMISSION = new OrderlywebUserGroupPermission();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<OrderlywebUserGroupPermissionRecord> getRecordType() {
        return OrderlywebUserGroupPermissionRecord.class;
    }

    /**
     * The column <code>orderlyweb_user_group_permission.id</code>.
     */
    public final TableField<OrderlywebUserGroupPermissionRecord, Integer> ID = createField(DSL.name("id"), org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>orderlyweb_user_group_permission.user_group</code>.
     */
    public final TableField<OrderlywebUserGroupPermissionRecord, String> USER_GROUP = createField(DSL.name("user_group"), org.jooq.impl.SQLDataType.CLOB.nullable(false), this, "");

    /**
     * The column <code>orderlyweb_user_group_permission.permission</code>.
     */
    public final TableField<OrderlywebUserGroupPermissionRecord, String> PERMISSION = createField(DSL.name("permission"), org.jooq.impl.SQLDataType.CLOB.nullable(false), this, "");

    /**
     * Create a <code>orderlyweb_user_group_permission</code> table reference
     */
    public OrderlywebUserGroupPermission() {
        this(DSL.name("orderlyweb_user_group_permission"), null);
    }

    /**
     * Create an aliased <code>orderlyweb_user_group_permission</code> table reference
     */
    public OrderlywebUserGroupPermission(String alias) {
        this(DSL.name(alias), ORDERLYWEB_USER_GROUP_PERMISSION);
    }

    /**
     * Create an aliased <code>orderlyweb_user_group_permission</code> table reference
     */
    public OrderlywebUserGroupPermission(Name alias) {
        this(alias, ORDERLYWEB_USER_GROUP_PERMISSION);
    }

    private OrderlywebUserGroupPermission(Name alias, Table<OrderlywebUserGroupPermissionRecord> aliased) {
        this(alias, aliased, null);
    }

    private OrderlywebUserGroupPermission(Name alias, Table<OrderlywebUserGroupPermissionRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    public <O extends Record> OrderlywebUserGroupPermission(Table<O> child, ForeignKey<O, OrderlywebUserGroupPermissionRecord> key) {
        super(child, key, ORDERLYWEB_USER_GROUP_PERMISSION);
    }

    @Override
    public Schema getSchema() {
        return DefaultSchema.DEFAULT_SCHEMA;
    }

    @Override
    public UniqueKey<OrderlywebUserGroupPermissionRecord> getPrimaryKey() {
        return Keys.PK_ORDERLYWEB_USER_GROUP_PERMISSION;
    }

    @Override
    public List<UniqueKey<OrderlywebUserGroupPermissionRecord>> getKeys() {
        return Arrays.<UniqueKey<OrderlywebUserGroupPermissionRecord>>asList(Keys.PK_ORDERLYWEB_USER_GROUP_PERMISSION);
    }

    @Override
    public List<ForeignKey<OrderlywebUserGroupPermissionRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<OrderlywebUserGroupPermissionRecord, ?>>asList(Keys.FK_ORDERLYWEB_USER_GROUP_PERMISSION_ORDERLYWEB_USER_GROUP_1, Keys.FK_ORDERLYWEB_USER_GROUP_PERMISSION_ORDERLYWEB_PERMISSION_1);
    }

    public OrderlywebUserGroup orderlywebUserGroup() {
        return new OrderlywebUserGroup(this, Keys.FK_ORDERLYWEB_USER_GROUP_PERMISSION_ORDERLYWEB_USER_GROUP_1);
    }

    public OrderlywebPermission orderlywebPermission() {
        return new OrderlywebPermission(this, Keys.FK_ORDERLYWEB_USER_GROUP_PERMISSION_ORDERLYWEB_PERMISSION_1);
    }

    @Override
    public OrderlywebUserGroupPermission as(String alias) {
        return new OrderlywebUserGroupPermission(DSL.name(alias), this);
    }

    @Override
    public OrderlywebUserGroupPermission as(Name alias) {
        return new OrderlywebUserGroupPermission(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public OrderlywebUserGroupPermission rename(String name) {
        return new OrderlywebUserGroupPermission(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public OrderlywebUserGroupPermission rename(Name name) {
        return new OrderlywebUserGroupPermission(name, null);
    }

    // -------------------------------------------------------------------------
    // Row3 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row3<Integer, String, String> fieldsRow() {
        return (Row3) super.fieldsRow();
    }
}
