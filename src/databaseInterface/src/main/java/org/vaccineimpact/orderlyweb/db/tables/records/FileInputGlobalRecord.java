/*
 * This file is generated by jOOQ.
 */
package org.vaccineimpact.orderlyweb.db.tables.records;


import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record3;
import org.jooq.Row3;
import org.jooq.impl.UpdatableRecordImpl;
import org.vaccineimpact.orderlyweb.db.tables.FileInputGlobal;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class FileInputGlobalRecord extends UpdatableRecordImpl<FileInputGlobalRecord> implements Record3<Integer, Integer, String> {

    private static final long serialVersionUID = -1915945723;

    /**
     * Setter for <code>file_input_global.id</code>.
     */
    public void setId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>file_input_global.id</code>.
     */
    public Integer getId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>file_input_global.file_input</code>.
     */
    public void setFileInput(Integer value) {
        set(1, value);
    }

    /**
     * Getter for <code>file_input_global.file_input</code>.
     */
    public Integer getFileInput() {
        return (Integer) get(1);
    }

    /**
     * Setter for <code>file_input_global.filename</code>.
     */
    public void setFilename(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>file_input_global.filename</code>.
     */
    public String getFilename() {
        return (String) get(2);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record3 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row3<Integer, Integer, String> fieldsRow() {
        return (Row3) super.fieldsRow();
    }

    @Override
    public Row3<Integer, Integer, String> valuesRow() {
        return (Row3) super.valuesRow();
    }

    @Override
    public Field<Integer> field1() {
        return FileInputGlobal.FILE_INPUT_GLOBAL.ID;
    }

    @Override
    public Field<Integer> field2() {
        return FileInputGlobal.FILE_INPUT_GLOBAL.FILE_INPUT;
    }

    @Override
    public Field<String> field3() {
        return FileInputGlobal.FILE_INPUT_GLOBAL.FILENAME;
    }

    @Override
    public Integer component1() {
        return getId();
    }

    @Override
    public Integer component2() {
        return getFileInput();
    }

    @Override
    public String component3() {
        return getFilename();
    }

    @Override
    public Integer value1() {
        return getId();
    }

    @Override
    public Integer value2() {
        return getFileInput();
    }

    @Override
    public String value3() {
        return getFilename();
    }

    @Override
    public FileInputGlobalRecord value1(Integer value) {
        setId(value);
        return this;
    }

    @Override
    public FileInputGlobalRecord value2(Integer value) {
        setFileInput(value);
        return this;
    }

    @Override
    public FileInputGlobalRecord value3(String value) {
        setFilename(value);
        return this;
    }

    @Override
    public FileInputGlobalRecord values(Integer value1, Integer value2, String value3) {
        value1(value1);
        value2(value2);
        value3(value3);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached FileInputGlobalRecord
     */
    public FileInputGlobalRecord() {
        super(FileInputGlobal.FILE_INPUT_GLOBAL);
    }

    /**
     * Create a detached, initialised FileInputGlobalRecord
     */
    public FileInputGlobalRecord(Integer id, Integer fileInput, String filename) {
        super(FileInputGlobal.FILE_INPUT_GLOBAL);

        set(0, id);
        set(1, fileInput);
        set(2, filename);
    }
}
