/*
 * This file is generated by jOOQ.
 */
package org.vaccineimpact.orderlyweb.db.tables;


import java.util.Arrays;
import java.util.List;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row4;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;
import org.vaccineimpact.orderlyweb.db.DefaultSchema;
import org.vaccineimpact.orderlyweb.db.Keys;
import org.vaccineimpact.orderlyweb.db.tables.records.ReportVersionPackageRecord;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ReportVersionPackage extends TableImpl<ReportVersionPackageRecord> {

    private static final long serialVersionUID = -1659568659;

    /**
     * The reference instance of <code>report_version_package</code>
     */
    public static final ReportVersionPackage REPORT_VERSION_PACKAGE = new ReportVersionPackage();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<ReportVersionPackageRecord> getRecordType() {
        return ReportVersionPackageRecord.class;
    }

    /**
     * The column <code>report_version_package.id</code>.
     */
    public final TableField<ReportVersionPackageRecord, Integer> ID = createField(DSL.name("id"), org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>report_version_package.report_version</code>.
     */
    public final TableField<ReportVersionPackageRecord, String> REPORT_VERSION = createField(DSL.name("report_version"), org.jooq.impl.SQLDataType.CLOB.nullable(false), this, "");

    /**
     * The column <code>report_version_package.package_name</code>.
     */
    public final TableField<ReportVersionPackageRecord, String> PACKAGE_NAME = createField(DSL.name("package_name"), org.jooq.impl.SQLDataType.CLOB.nullable(false), this, "");

    /**
     * The column <code>report_version_package.package_version</code>.
     */
    public final TableField<ReportVersionPackageRecord, String> PACKAGE_VERSION = createField(DSL.name("package_version"), org.jooq.impl.SQLDataType.CLOB.nullable(false), this, "");

    /**
     * Create a <code>report_version_package</code> table reference
     */
    public ReportVersionPackage() {
        this(DSL.name("report_version_package"), null);
    }

    /**
     * Create an aliased <code>report_version_package</code> table reference
     */
    public ReportVersionPackage(String alias) {
        this(DSL.name(alias), REPORT_VERSION_PACKAGE);
    }

    /**
     * Create an aliased <code>report_version_package</code> table reference
     */
    public ReportVersionPackage(Name alias) {
        this(alias, REPORT_VERSION_PACKAGE);
    }

    private ReportVersionPackage(Name alias, Table<ReportVersionPackageRecord> aliased) {
        this(alias, aliased, null);
    }

    private ReportVersionPackage(Name alias, Table<ReportVersionPackageRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    public <O extends Record> ReportVersionPackage(Table<O> child, ForeignKey<O, ReportVersionPackageRecord> key) {
        super(child, key, REPORT_VERSION_PACKAGE);
    }

    @Override
    public Schema getSchema() {
        return DefaultSchema.DEFAULT_SCHEMA;
    }

    @Override
    public UniqueKey<ReportVersionPackageRecord> getPrimaryKey() {
        return Keys.PK_REPORT_VERSION_PACKAGE;
    }

    @Override
    public List<UniqueKey<ReportVersionPackageRecord>> getKeys() {
        return Arrays.<UniqueKey<ReportVersionPackageRecord>>asList(Keys.PK_REPORT_VERSION_PACKAGE);
    }

    @Override
    public List<ForeignKey<ReportVersionPackageRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<ReportVersionPackageRecord, ?>>asList(Keys.FK_REPORT_VERSION_PACKAGE_REPORT_VERSION_1);
    }

    public ReportVersion reportVersion() {
        return new ReportVersion(this, Keys.FK_REPORT_VERSION_PACKAGE_REPORT_VERSION_1);
    }

    @Override
    public ReportVersionPackage as(String alias) {
        return new ReportVersionPackage(DSL.name(alias), this);
    }

    @Override
    public ReportVersionPackage as(Name alias) {
        return new ReportVersionPackage(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public ReportVersionPackage rename(String name) {
        return new ReportVersionPackage(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public ReportVersionPackage rename(Name name) {
        return new ReportVersionPackage(name, null);
    }

    // -------------------------------------------------------------------------
    // Row4 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row4<Integer, String, String, String> fieldsRow() {
        return (Row4) super.fieldsRow();
    }
}
