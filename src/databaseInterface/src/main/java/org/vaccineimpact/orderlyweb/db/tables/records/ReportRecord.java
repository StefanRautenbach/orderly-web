/*
 * This file is generated by jOOQ.
 */
package org.vaccineimpact.orderlyweb.db.tables.records;


import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record2;
import org.jooq.Row2;
import org.jooq.impl.UpdatableRecordImpl;
import org.vaccineimpact.orderlyweb.db.tables.Report;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ReportRecord extends UpdatableRecordImpl<ReportRecord> implements Record2<String, String> {

    private static final long serialVersionUID = 1809337267;

    /**
     * Setter for <code>report.name</code>.
     */
    public void setName(String value) {
        set(0, value);
    }

    /**
     * Getter for <code>report.name</code>.
     */
    public String getName() {
        return (String) get(0);
    }

    /**
     * Setter for <code>report.latest</code>.
     */
    public void setLatest(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>report.latest</code>.
     */
    public String getLatest() {
        return (String) get(1);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<String> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record2 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row2<String, String> fieldsRow() {
        return (Row2) super.fieldsRow();
    }

    @Override
    public Row2<String, String> valuesRow() {
        return (Row2) super.valuesRow();
    }

    @Override
    public Field<String> field1() {
        return Report.REPORT.NAME;
    }

    @Override
    public Field<String> field2() {
        return Report.REPORT.LATEST;
    }

    @Override
    public String component1() {
        return getName();
    }

    @Override
    public String component2() {
        return getLatest();
    }

    @Override
    public String value1() {
        return getName();
    }

    @Override
    public String value2() {
        return getLatest();
    }

    @Override
    public ReportRecord value1(String value) {
        setName(value);
        return this;
    }

    @Override
    public ReportRecord value2(String value) {
        setLatest(value);
        return this;
    }

    @Override
    public ReportRecord values(String value1, String value2) {
        value1(value1);
        value2(value2);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached ReportRecord
     */
    public ReportRecord() {
        super(Report.REPORT);
    }

    /**
     * Create a detached, initialised ReportRecord
     */
    public ReportRecord(String name, String latest) {
        super(Report.REPORT);

        set(0, name);
        set(1, latest);
    }
}
