/*
 * This file is generated by jOOQ.
 */
package org.vaccineimpact.orderlyweb.db.tables.records;


import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record7;
import org.jooq.Row7;
import org.jooq.impl.UpdatableRecordImpl;
import org.vaccineimpact.orderlyweb.db.tables.Changelog;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ChangelogRecord extends UpdatableRecordImpl<ChangelogRecord> implements Record7<String, String, String, String, String, Boolean, Integer> {

    private static final long serialVersionUID = -2088889340;

    /**
     * Setter for <code>changelog.id</code>.
     */
    public void setId(String value) {
        set(0, value);
    }

    /**
     * Getter for <code>changelog.id</code>.
     */
    public String getId() {
        return (String) get(0);
    }

    /**
     * Setter for <code>changelog.report_version</code>.
     */
    public void setReportVersion(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>changelog.report_version</code>.
     */
    public String getReportVersion() {
        return (String) get(1);
    }

    /**
     * Setter for <code>changelog.report_version_public</code>.
     */
    public void setReportVersionPublic(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>changelog.report_version_public</code>.
     */
    public String getReportVersionPublic() {
        return (String) get(2);
    }

    /**
     * Setter for <code>changelog.label</code>.
     */
    public void setLabel(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>changelog.label</code>.
     */
    public String getLabel() {
        return (String) get(3);
    }

    /**
     * Setter for <code>changelog.value</code>.
     */
    public void setValue(String value) {
        set(4, value);
    }

    /**
     * Getter for <code>changelog.value</code>.
     */
    public String getValue() {
        return (String) get(4);
    }

    /**
     * Setter for <code>changelog.from_file</code>.
     */
    public void setFromFile(Boolean value) {
        set(5, value);
    }

    /**
     * Getter for <code>changelog.from_file</code>.
     */
    public Boolean getFromFile() {
        return (Boolean) get(5);
    }

    /**
     * Setter for <code>changelog.ordering</code>.
     */
    public void setOrdering(Integer value) {
        set(6, value);
    }

    /**
     * Getter for <code>changelog.ordering</code>.
     */
    public Integer getOrdering() {
        return (Integer) get(6);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<String> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record7 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row7<String, String, String, String, String, Boolean, Integer> fieldsRow() {
        return (Row7) super.fieldsRow();
    }

    @Override
    public Row7<String, String, String, String, String, Boolean, Integer> valuesRow() {
        return (Row7) super.valuesRow();
    }

    @Override
    public Field<String> field1() {
        return Changelog.CHANGELOG.ID;
    }

    @Override
    public Field<String> field2() {
        return Changelog.CHANGELOG.REPORT_VERSION;
    }

    @Override
    public Field<String> field3() {
        return Changelog.CHANGELOG.REPORT_VERSION_PUBLIC;
    }

    @Override
    public Field<String> field4() {
        return Changelog.CHANGELOG.LABEL;
    }

    @Override
    public Field<String> field5() {
        return Changelog.CHANGELOG.VALUE;
    }

    @Override
    public Field<Boolean> field6() {
        return Changelog.CHANGELOG.FROM_FILE;
    }

    @Override
    public Field<Integer> field7() {
        return Changelog.CHANGELOG.ORDERING;
    }

    @Override
    public String component1() {
        return getId();
    }

    @Override
    public String component2() {
        return getReportVersion();
    }

    @Override
    public String component3() {
        return getReportVersionPublic();
    }

    @Override
    public String component4() {
        return getLabel();
    }

    @Override
    public String component5() {
        return getValue();
    }

    @Override
    public Boolean component6() {
        return getFromFile();
    }

    @Override
    public Integer component7() {
        return getOrdering();
    }

    @Override
    public String value1() {
        return getId();
    }

    @Override
    public String value2() {
        return getReportVersion();
    }

    @Override
    public String value3() {
        return getReportVersionPublic();
    }

    @Override
    public String value4() {
        return getLabel();
    }

    @Override
    public String value5() {
        return getValue();
    }

    @Override
    public Boolean value6() {
        return getFromFile();
    }

    @Override
    public Integer value7() {
        return getOrdering();
    }

    @Override
    public ChangelogRecord value1(String value) {
        setId(value);
        return this;
    }

    @Override
    public ChangelogRecord value2(String value) {
        setReportVersion(value);
        return this;
    }

    @Override
    public ChangelogRecord value3(String value) {
        setReportVersionPublic(value);
        return this;
    }

    @Override
    public ChangelogRecord value4(String value) {
        setLabel(value);
        return this;
    }

    @Override
    public ChangelogRecord value5(String value) {
        setValue(value);
        return this;
    }

    @Override
    public ChangelogRecord value6(Boolean value) {
        setFromFile(value);
        return this;
    }

    @Override
    public ChangelogRecord value7(Integer value) {
        setOrdering(value);
        return this;
    }

    @Override
    public ChangelogRecord values(String value1, String value2, String value3, String value4, String value5, Boolean value6, Integer value7) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached ChangelogRecord
     */
    public ChangelogRecord() {
        super(Changelog.CHANGELOG);
    }

    /**
     * Create a detached, initialised ChangelogRecord
     */
    public ChangelogRecord(String id, String reportVersion, String reportVersionPublic, String label, String value, Boolean fromFile, Integer ordering) {
        super(Changelog.CHANGELOG);

        set(0, id);
        set(1, reportVersion);
        set(2, reportVersionPublic);
        set(3, label);
        set(4, value);
        set(5, fromFile);
        set(6, ordering);
    }
}
