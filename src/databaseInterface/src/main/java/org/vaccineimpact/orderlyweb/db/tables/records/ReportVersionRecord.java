/*
 * This file is generated by jOOQ.
 */
package org.vaccineimpact.orderlyweb.db.tables.records;


import java.sql.Timestamp;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record14;
import org.jooq.Row14;
import org.jooq.impl.UpdatableRecordImpl;
import org.vaccineimpact.orderlyweb.db.tables.ReportVersion;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ReportVersionRecord extends UpdatableRecordImpl<ReportVersionRecord> implements Record14<String, String, Timestamp, String, String, Boolean, Boolean, Double, String, String, Boolean, String, String, String> {

    private static final long serialVersionUID = -1387037717;

    /**
     * Setter for <code>report_version.id</code>.
     */
    public void setId(String value) {
        set(0, value);
    }

    /**
     * Getter for <code>report_version.id</code>.
     */
    public String getId() {
        return (String) get(0);
    }

    /**
     * Setter for <code>report_version.report</code>.
     */
    public void setReport(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>report_version.report</code>.
     */
    public String getReport() {
        return (String) get(1);
    }

    /**
     * Setter for <code>report_version.date</code>.
     */
    public void setDate(Timestamp value) {
        set(2, value);
    }

    /**
     * Getter for <code>report_version.date</code>.
     */
    public Timestamp getDate() {
        return (Timestamp) get(2);
    }

    /**
     * Setter for <code>report_version.displayname</code>.
     */
    public void setDisplayname(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>report_version.displayname</code>.
     */
    public String getDisplayname() {
        return (String) get(3);
    }

    /**
     * Setter for <code>report_version.description</code>.
     */
    public void setDescription(String value) {
        set(4, value);
    }

    /**
     * Getter for <code>report_version.description</code>.
     */
    public String getDescription() {
        return (String) get(4);
    }

    /**
     * Setter for <code>report_version.connection</code>.
     */
    public void setConnection(Boolean value) {
        set(5, value);
    }

    /**
     * Getter for <code>report_version.connection</code>.
     */
    public Boolean getConnection() {
        return (Boolean) get(5);
    }

    /**
     * Setter for <code>report_version.published</code>.
     */
    public void setPublished(Boolean value) {
        set(6, value);
    }

    /**
     * Getter for <code>report_version.published</code>.
     */
    public Boolean getPublished() {
        return (Boolean) get(6);
    }

    /**
     * Setter for <code>report_version.elapsed</code>.
     */
    public void setElapsed(Double value) {
        set(7, value);
    }

    /**
     * Getter for <code>report_version.elapsed</code>.
     */
    public Double getElapsed() {
        return (Double) get(7);
    }

    /**
     * Setter for <code>report_version.git_sha</code>.
     */
    public void setGitSha(String value) {
        set(8, value);
    }

    /**
     * Getter for <code>report_version.git_sha</code>.
     */
    public String getGitSha() {
        return (String) get(8);
    }

    /**
     * Setter for <code>report_version.git_branch</code>.
     */
    public void setGitBranch(String value) {
        set(9, value);
    }

    /**
     * Getter for <code>report_version.git_branch</code>.
     */
    public String getGitBranch() {
        return (String) get(9);
    }

    /**
     * Setter for <code>report_version.git_clean</code>.
     */
    public void setGitClean(Boolean value) {
        set(10, value);
    }

    /**
     * Getter for <code>report_version.git_clean</code>.
     */
    public Boolean getGitClean() {
        return (Boolean) get(10);
    }

    /**
     * Setter for <code>report_version.requester</code>.
     */
    public void setRequester(String value) {
        set(11, value);
    }

    /**
     * Getter for <code>report_version.requester</code>.
     */
    public String getRequester() {
        return (String) get(11);
    }

    /**
     * Setter for <code>report_version.author</code>.
     */
    public void setAuthor(String value) {
        set(12, value);
    }

    /**
     * Getter for <code>report_version.author</code>.
     */
    public String getAuthor() {
        return (String) get(12);
    }

    /**
     * Setter for <code>report_version.comment</code>.
     */
    public void setComment(String value) {
        set(13, value);
    }

    /**
     * Getter for <code>report_version.comment</code>.
     */
    public String getComment() {
        return (String) get(13);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<String> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record14 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row14<String, String, Timestamp, String, String, Boolean, Boolean, Double, String, String, Boolean, String, String, String> fieldsRow() {
        return (Row14) super.fieldsRow();
    }

    @Override
    public Row14<String, String, Timestamp, String, String, Boolean, Boolean, Double, String, String, Boolean, String, String, String> valuesRow() {
        return (Row14) super.valuesRow();
    }

    @Override
    public Field<String> field1() {
        return ReportVersion.REPORT_VERSION.ID;
    }

    @Override
    public Field<String> field2() {
        return ReportVersion.REPORT_VERSION.REPORT;
    }

    @Override
    public Field<Timestamp> field3() {
        return ReportVersion.REPORT_VERSION.DATE;
    }

    @Override
    public Field<String> field4() {
        return ReportVersion.REPORT_VERSION.DISPLAYNAME;
    }

    @Override
    public Field<String> field5() {
        return ReportVersion.REPORT_VERSION.DESCRIPTION;
    }

    @Override
    public Field<Boolean> field6() {
        return ReportVersion.REPORT_VERSION.CONNECTION;
    }

    @Override
    public Field<Boolean> field7() {
        return ReportVersion.REPORT_VERSION.PUBLISHED;
    }

    @Override
    public Field<Double> field8() {
        return ReportVersion.REPORT_VERSION.ELAPSED;
    }

    @Override
    public Field<String> field9() {
        return ReportVersion.REPORT_VERSION.GIT_SHA;
    }

    @Override
    public Field<String> field10() {
        return ReportVersion.REPORT_VERSION.GIT_BRANCH;
    }

    @Override
    public Field<Boolean> field11() {
        return ReportVersion.REPORT_VERSION.GIT_CLEAN;
    }

    @Override
    public Field<String> field12() {
        return ReportVersion.REPORT_VERSION.REQUESTER;
    }

    @Override
    public Field<String> field13() {
        return ReportVersion.REPORT_VERSION.AUTHOR;
    }

    @Override
    public Field<String> field14() {
        return ReportVersion.REPORT_VERSION.COMMENT;
    }

    @Override
    public String component1() {
        return getId();
    }

    @Override
    public String component2() {
        return getReport();
    }

    @Override
    public Timestamp component3() {
        return getDate();
    }

    @Override
    public String component4() {
        return getDisplayname();
    }

    @Override
    public String component5() {
        return getDescription();
    }

    @Override
    public Boolean component6() {
        return getConnection();
    }

    @Override
    public Boolean component7() {
        return getPublished();
    }

    @Override
    public Double component8() {
        return getElapsed();
    }

    @Override
    public String component9() {
        return getGitSha();
    }

    @Override
    public String component10() {
        return getGitBranch();
    }

    @Override
    public Boolean component11() {
        return getGitClean();
    }

    @Override
    public String component12() {
        return getRequester();
    }

    @Override
    public String component13() {
        return getAuthor();
    }

    @Override
    public String component14() {
        return getComment();
    }

    @Override
    public String value1() {
        return getId();
    }

    @Override
    public String value2() {
        return getReport();
    }

    @Override
    public Timestamp value3() {
        return getDate();
    }

    @Override
    public String value4() {
        return getDisplayname();
    }

    @Override
    public String value5() {
        return getDescription();
    }

    @Override
    public Boolean value6() {
        return getConnection();
    }

    @Override
    public Boolean value7() {
        return getPublished();
    }

    @Override
    public Double value8() {
        return getElapsed();
    }

    @Override
    public String value9() {
        return getGitSha();
    }

    @Override
    public String value10() {
        return getGitBranch();
    }

    @Override
    public Boolean value11() {
        return getGitClean();
    }

    @Override
    public String value12() {
        return getRequester();
    }

    @Override
    public String value13() {
        return getAuthor();
    }

    @Override
    public String value14() {
        return getComment();
    }

    @Override
    public ReportVersionRecord value1(String value) {
        setId(value);
        return this;
    }

    @Override
    public ReportVersionRecord value2(String value) {
        setReport(value);
        return this;
    }

    @Override
    public ReportVersionRecord value3(Timestamp value) {
        setDate(value);
        return this;
    }

    @Override
    public ReportVersionRecord value4(String value) {
        setDisplayname(value);
        return this;
    }

    @Override
    public ReportVersionRecord value5(String value) {
        setDescription(value);
        return this;
    }

    @Override
    public ReportVersionRecord value6(Boolean value) {
        setConnection(value);
        return this;
    }

    @Override
    public ReportVersionRecord value7(Boolean value) {
        setPublished(value);
        return this;
    }

    @Override
    public ReportVersionRecord value8(Double value) {
        setElapsed(value);
        return this;
    }

    @Override
    public ReportVersionRecord value9(String value) {
        setGitSha(value);
        return this;
    }

    @Override
    public ReportVersionRecord value10(String value) {
        setGitBranch(value);
        return this;
    }

    @Override
    public ReportVersionRecord value11(Boolean value) {
        setGitClean(value);
        return this;
    }

    @Override
    public ReportVersionRecord value12(String value) {
        setRequester(value);
        return this;
    }

    @Override
    public ReportVersionRecord value13(String value) {
        setAuthor(value);
        return this;
    }

    @Override
    public ReportVersionRecord value14(String value) {
        setComment(value);
        return this;
    }

    @Override
    public ReportVersionRecord values(String value1, String value2, Timestamp value3, String value4, String value5, Boolean value6, Boolean value7, Double value8, String value9, String value10, Boolean value11, String value12, String value13, String value14) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        value9(value9);
        value10(value10);
        value11(value11);
        value12(value12);
        value13(value13);
        value14(value14);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached ReportVersionRecord
     */
    public ReportVersionRecord() {
        super(ReportVersion.REPORT_VERSION);
    }

    /**
     * Create a detached, initialised ReportVersionRecord
     */
    public ReportVersionRecord(String id, String report, Timestamp date, String displayname, String description, Boolean connection, Boolean published, Double elapsed, String gitSha, String gitBranch, Boolean gitClean, String requester, String author, String comment) {
        super(ReportVersion.REPORT_VERSION);

        set(0, id);
        set(1, report);
        set(2, date);
        set(3, displayname);
        set(4, description);
        set(5, connection);
        set(6, published);
        set(7, elapsed);
        set(8, gitSha);
        set(9, gitBranch);
        set(10, gitClean);
        set(11, requester);
        set(12, author);
        set(13, comment);
    }
}
